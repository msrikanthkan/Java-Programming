import java.util.Arrays;
import java.lang.Integer;

class JavaRecursiveBinarySearch {
  // Returns either the index of the location in the array,
  // or -1 if the array did not contain the targetValue
  public static int doSearch(int[] array, int targetValue) {
    int min = 0;
	System.out.println(Arrays.toString(array) + " - target value : "  + targetValue);
    int max = array.length - 1;
    System.out.println(max);
    // int guess = (min + max) / 2;
    int guess =  guessIt(array, min, max, targetValue);
    System.out.println ("guess : " + guess);
    
    return guess;
    
	// return -1;
  }
  
  private static int guessIt(int[] array, int min, int max, int targetValue) { 
    int guess = (min + max) / 2;
    if (min == max && targetValue != array[guess]) { 
      return -1;
    } else {
    if (targetValue == array[guess])
      return guess;
    else if (targetValue < array[guess])
    { 
      max = guess - 1;
      
    } 
    else if (targetValue > array[guess])  { 
      min = guess + 1;
    } else { 
      return -1;
    } 
    }
    System.out.println("min : " + min + " - max : " + max);
    return guessIt(array, min, max, targetValue);
  }
};


